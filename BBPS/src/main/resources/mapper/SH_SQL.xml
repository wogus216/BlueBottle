<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="SH">
	
<select id="getOCnt" parameterType="hashmap" resultType="Integer">
	SELECT COUNT(*) AS CNT
	FROM ORD
	WHERE DEL_FLAG!=0
		<if test="search_input != null and search_input != ''">
			<choose>
				<when test="search_filter == 0">
					AND ORD_NO LIKE '%' || #{search_input} || '%'
				</when>
			</choose>
		</if>
</select>

<select id ="getOList" parameterType="hashmap" resultType="hashmap">
	SELECT ORD_NO, ENROLL_DATE, BRCH_NAME, CODE_NAME, PROCESS_DATE, CODE_S_CATE
	FROM(SELECT ORD_NO, ENROLL_DATE, BRCH_NAME, CODE_NAME, PROCESS_DATE, C.CODE_S_CATE, ROW_NUMBER() OVER(ORDER BY ORD_NO DESC)AS RNUM
		 FROM(SELECT CASE WHEN R.STAT_CODE IS NULL THEN O.STAT_CODE ELSE R.STAT_CODE END AS STAT_CODE,
		 			 CASE WHEN R.ORD_NO IS NULL THEN TO_CHAR(O.PROCESS_DATE, 'YYYY-MM-DD') ELSE TO_CHAR(R.PROCESS_DATE, 'YYYY-MM-DD') END AS PROCESS_DATE, 
		 			 O.ORD_NO AS ORD_NO, TO_CHAR(O.ENROLL_DATE, 'YYYY-MM-DD') AS ENROLL_DATE, BRCH_NAME
		 	  FROM ORD O LEFT OUTER JOIN REF R
                                	  ON O.ORD_NO=R.ORD_NO
                         	  INNER JOIN BRCH B
                                	  ON B.BRCH_NO=O.BRCH_NO
         	  )ORD INNER JOIN COMMON_CODE C
                      	   ON C.CODE_S_CATE=ORD.STAT_CODE
	WHERE CODE_L_CATE=2
	<if test="search_input != null and search_input != ''">
		<choose>
			<when test="search_filter == 0">
				AND ORD_NO LIKE '%' || #{search_input} || '%'
			</when>
		</choose>
	</if>
		)ORDD
	WHERE ORDD.RNUM BETWEEN #{startCnt} AND #{endCnt}
</select>
<select id="getODtlList" parameterType="hashmap" resultType="hashmap">
	SELECT *
	FROM(SELECT O.ORD_NO, OI.ITEM_NO, I.ITEM_NAME, I.CATE_NO, OI.CNT, OI.PRICE, TO_CHAR(EXPIRY_DATE, 'YYYY-MM-DD')AS EXPIRY_DATE
     	   FROM ORD O INNER JOIN ORD_ITEM OI
            	     		  ON O.ORD_NO = OI.ORD_NO
          		   	  INNER JOIN ITEM I
                       		  ON OI.ITEM_NO=I.ITEM_NO)ORD
	WHERE ORD.ORD_NO= #{oNo}
</select>
<select id="getODtl" parameterType="hashmap" resultType="hashmap">
	SELECT ORD_NO, ENROLL_DATE, BRCH_NAME, CODE_NAME, PROCESS_DATE, NON_APV_RSN, SUM(PRICE) AS TOT_PRICE
    FROM(SELECT O.ORD_NO, TO_CHAR(ENROLL_DATE, 'YYYY-MM-DD')AS ENROLL_DATE, BRCH_NAME,
    	 TO_CHAR(PROCESS_DATE, 'YYYY-MM-DD')AS PROCESS_DATE, CODE_NAME, NON_APV_RSN, PRICE
         FROM ORD O INNER JOIN ORD_ITEM OI
                         	ON O.ORD_NO = OI.ORD_NO
                    INNER JOIN BRCH B
                            ON B.BRCH_NO = O.BRCH_NO
                    INNER JOIN COMMON_CODE C
                          	ON C.CODE_S_CATE=O.STAT_CODE
         WHERE C.CODE_L_CATE=2)ORD
	WHERE ORD.ORD_NO= #{oNo}
	GROUP BY ORD_NO, ENROLL_DATE, BRCH_NAME, PROCESS_DATE, CODE_NAME, NON_APV_RSN
</select>

<select id="getRDtlList" parameterType="hashmap" resultType="hashmap">
	SELECT ORD_NO, ITEM_NO, ITEM_NAME, CNT, RCNT, PRICE*RCNT AS REF_PRICE, RSN
	FROM(SELECT O.ORD_NO, OI.ITEM_NO, I.ITEM_NAME, OI.CNT, RI.CNT AS RCNT, IP.PRICE, RSN
	 	 FROM ORD O INNER JOIN REF R
                      		ON O.ORD_NO=R.ORD_NO
               		INNER JOIN REF_ITEM RI
               		    	ON R.REF_NO=RI.REF_NO
               		INNER JOIN ITEM I
                   	   		ON RI.ITEM_NO = I.ITEM_NO
               		INNER JOIN ORD_ITEM OI
                    	  	ON RI.ITEM_NO = OI.ITEM_NO
                   	INNER JOIN ITEM_PRICE IP
                       	    ON I.ITEM_NO=IP.ITEM_NO)REF
	WHERE REF.ORD_NO= #{oNo}
</select>

<select id="getRDtl" parameterType="hashmap" resultType="hashmap">
	SELECT ORD_NO, REF_NO, ENROLL_DATE, CODE_NAME, SUM(PRICE*RCNT)AS TOT_PRICE, NON_APV_RSN
	FROM(SELECT O.ORD_NO, R.REF_NO, TO_CHAR(R.ENROLL_DATE, 'YYYY-MM-DD')AS ENROLL_DATE, CODE_NAME,
    TO_CHAR(R.PROCESS_DATE, 'YYYY-MM-DD')AS PROCESS_DATE,  RI.CNT AS RCNT, IP.PRICE, R.NON_APV_RSN
     	 FROM ORD O INNER JOIN REF R
         	         		ON O.ORD_NO=R.ORD_NO
            	    INNER JOIN COMMON_CODE C
                	        ON C.CODE_S_CATE=R.STAT_CODE
                    INNER JOIN REF_ITEM RI
                            ON R.REF_NO=RI.REF_NO
                    INNER JOIN ITEM I
                            ON RI.ITEM_NO=I.ITEM_NO
                    INNER JOIN ITEM_PRICE IP
                            ON RI.ITEM_NO=IP.ITEM_NO
    	 WHERE C.CODE_L_CATE=2)REF
WHERE REF.ORD_NO = #{oNo}
GROUP BY ORD_NO, REF_NO, ENROLL_DATE, CODE_NAME, NON_APV_RSN
</select>

<select id="getOWholeList" parameterType="hashmap" resultType="hashmap">
	SELECT O.STAT_CODE AS O_STAT_CODE, R.STAT_CODE AS R_STAT_CODE, C.CODE_NAME AS ORD_CODE_NAME, C2.CODE_NAME AS REF_CODE_NAME,
           O.ENROLL_DATE AS ORD_ENROLL_DATE, R.ENROLL_DATE AS REF_ENROLL_DATE,
           U.USER_NAME AS ORD_USER_NAME, U2.USER_NAME AS SEND_USER_NAME, U3.USER_NAME AS REF_USER_NAME,
           O.PROCESS_DATE AS ORD_PROCESS_DATE, R.PROCESS_DATE AS REF_PROCESS_DATE
    FROM ORD O INNER JOIN REF R
                       ON O.ORD_NO=R.ORD_NO
               INNER JOIN COMMON_CODE C2
                       ON R.STAT_CODE=C2.CODE_S_CATE
               INNER JOIN COMMON_CODE C
                       ON O.STAT_CODE=C.CODE_S_CATE
               INNER JOIN HQ_USER U
                       ON U.USER_NO=O.APV_PROCESS_USER_NO
               INNER JOIN HQ_USER U2
                       ON U2.USER_NO=O.SEND_PROCESS_USER_NO
               INNER JOIN HQ_USER U3
                       ON U3.USER_NO=R.APV_PROCESS_USER_NO
               INNER JOIN HQ_DEP D
                       ON U.DEP_NO=D.DEP_NO
	WHERE O.ORD_NO=#{oNo} AND C.CODE_L_CATE=2 AND C2.CODE_L_CATE=2
</select>
<update id="apvOrd" parameterType="hashmap">
	UPDATE ORD SET STAT_CODE = 2, PROCESS_DATE=SYSDATE, APV_PROCESS_USER_NO=1
	WHERE ORD_NO = #{oNo}
</update>
<update id="nonApvOrd" parameterType="hashmap">
	UPDATE ORD SET STAT_CODE = 3, PROCESS_DATE=SYSDATE, NON_APV_RSN = #{oRsn}, APV_PROCESS_USER_NO=1
	WHERE ORD_NO = #{oNo}
</update>
<update id="apvRef" parameterType="hashmap">
	UPDATE REF SET STAT_CODE = 7, PROCESS_DATE=SYSDATE, APV_PROCESS_USER_NO=3
	WHERE ORD_NO = #{oNo}
</update>
<update id="nonApvRef" parameterType="hashmap">
	UPDATE REF SET STAT_CODE = 8, PROCESS_DATE=SYSDATE, NON_APV_RSN = #{rRsn}, APV_PROCESS_USER_NO=3
	WHERE ORD_NO = #{oNo}
</update>
<update id="sendO" parameterType="hashmap">
	UPDATE ORD SET STAT_CODE = 4, SEND_DATE=SYSDATE, SEND_PROCESS_USER_NO=2
	WHERE ORD_NO = #{oNo1}
</update>
<update id="sendExp" parameterType="hashmap">
	UPDATE ORD_ITEM 
	SET EXPIRY_DATE= #{expDate}
	WHERE ORD_ITEM.ITEM_NO=#{iNo} AND ORD_NO=#{oNo1}
</update>
<select id="getBOCnt" parameterType="hashmap" resultType="Integer">
	SELECT COUNT(*) AS CNT
	FROM ORD
	WHERE DEL_FLAG!=0 AND BRCH_NO=2
		<if test="search_input != null and search_input != ''">
			<choose>
				<when test="search_filter == 0">
					AND ORD_NO LIKE '%' || #{search_input} || '%'
				</when>
			</choose>
		</if>
</select>
<select id="getBOList" parameterType="hashmap" resultType="hashmap">
	SELECT *
	FROM(SELECT ORD_NO, TO_CHAR(ENROLL_DATE, 'YYYY-MM-DD')AS ENROLL_DATE, CODE_NAME, SUM(PRICE) AS PRICE, STAT_CODE, ROW_NUMBER() OVER(ORDER BY ORD_NO DESC)AS RNUM
		 FROM(SELECT O.ORD_NO, O.ENROLL_DATE, PRICE, CASE WHEN R.STAT_CODE IS NULL THEN O.STAT_CODE ELSE R.STAT_CODE END AS STAT_CODE, O.BRCH_NO
		 	  FROM ORD O LEFT OUTER JOIN REF R
                                 	  ON O.ORD_NO=R.ORD_NO
                         	  INNER JOIN ORD_ITEM OI
                                	  ON O.ORD_NO=OI.ORD_NO
                        	  INNER JOIN BRCH B
                                 	  ON B.BRCH_NO=O.BRCH_NO
        	 )ORD INNER JOIN COMMON_CODE C
                     	  ON ORD.STAT_CODE=C.CODE_S_CATE
		WHERE C.CODE_L_CATE=2 AND BRCH_NO=2
	<if test="search_input != null and search_input != ''">
		<choose>
			<when test="search_filter == 0">
				AND ORD_NO LIKE '%' || #{search_input} || '%'
			</when>
		</choose>
	</if>
		GROUP BY ORD_NO, TO_CHAR(ENROLL_DATE, 'YYYY-MM-DD'), CODE_NAME, STAT_CODE)ORDD
	WHERE ORDD.RNUM BETWEEN #{startCnt} AND #{endCnt}
	
</select>
<select id="getBODtlList" parameterType="hashmap" resultType="hashmap">
	SELECT *
	FROM(SELECT O.ORD_NO, OI.ITEM_NO, I.ITEM_NAME, OI.CNT, OI.PRICE, TO_CHAR(EXPIRY_DATE, 'YYYY-MM-DD')AS EXPIRY_DATE
     	   FROM ORD O INNER JOIN ORD_ITEM OI
            	     		  ON O.ORD_NO = OI.ORD_NO
          		   	  INNER JOIN ITEM I
                       		  ON OI.ITEM_NO=I.ITEM_NO)ORD
	WHERE ORD.ORD_NO= #{oNo}
</select>
<select id="getBODtl" parameterType="hashmap" resultType="hashmap">
	SELECT ORD_NO, ENROLL_DATE, CODE_NAME, PROCESS_DATE, NON_APV_RSN, SUM(PRICE) AS TOT_PRICE
    FROM(SELECT O.ORD_NO, TO_CHAR(ENROLL_DATE, 'YYYY-MM-DD')AS ENROLL_DATE,
    	 TO_CHAR(PROCESS_DATE, 'YYYY-MM-DD')AS PROCESS_DATE, CODE_NAME, NON_APV_RSN, PRICE
         FROM ORD O INNER JOIN ORD_ITEM OI
                         	ON O.ORD_NO = OI.ORD_NO
                    INNER JOIN COMMON_CODE C
                          	ON C.CODE_S_CATE=O.STAT_CODE
         WHERE C.CODE_L_CATE=2)ORD
	WHERE ORD.ORD_NO= #{oNo}
	GROUP BY ORD_NO, ENROLL_DATE, PROCESS_DATE, CODE_NAME, NON_APV_RSN
</select>

<select id="getBRDtlList" parameterType="hashmap" resultType="hashmap">
	SELECT ORD_NO, ITEM_NO, ITEM_NAME, CNT, RCNT, PRICE*RCNT AS REF_PRICE, RSN
	FROM(SELECT O.ORD_NO, OI.ITEM_NO, I.ITEM_NAME, OI.CNT, RI.CNT AS RCNT, IP.PRICE, RSN
	 	 FROM ORD O INNER JOIN REF R
                      		ON O.ORD_NO=R.ORD_NO
               		INNER JOIN REF_ITEM RI
               		    	ON R.REF_NO=RI.REF_NO
               		INNER JOIN ITEM I
                   	   		ON RI.ITEM_NO = I.ITEM_NO
               		INNER JOIN ORD_ITEM OI
                    	  	ON RI.ITEM_NO = OI.ITEM_NO
                   	INNER JOIN ITEM_PRICE IP
                       	    ON I.ITEM_NO=IP.ITEM_NO)REF
	WHERE REF.ORD_NO= #{oNo}
</select>

<select id="getBRDtl" parameterType="hashmap" resultType="hashmap">
	SELECT ORD_NO, REF_NO, ENROLL_DATE, CODE_NAME, SUM(PRICE*RCNT)AS TOT_PRICE, NON_APV_RSN
	FROM(SELECT O.ORD_NO, R.REF_NO, TO_CHAR(R.ENROLL_DATE, 'YYYY-MM-DD')AS ENROLL_DATE, CODE_NAME,
    TO_CHAR(R.PROCESS_DATE, 'YYYY-MM-DD')AS PROCESS_DATE,  RI.CNT AS RCNT, IP.PRICE, R.NON_APV_RSN
     	 FROM ORD O INNER JOIN REF R
         	         		ON O.ORD_NO=R.ORD_NO
            	    INNER JOIN COMMON_CODE C
                	        ON C.CODE_S_CATE=R.STAT_CODE
                    INNER JOIN REF_ITEM RI
                            ON R.REF_NO=RI.REF_NO
                    INNER JOIN ITEM I
                            ON RI.ITEM_NO=I.ITEM_NO
                    INNER JOIN ITEM_PRICE IP
                            ON RI.ITEM_NO=IP.ITEM_NO
    	 WHERE C.CODE_L_CATE=2)REF
WHERE REF.ORD_NO = #{oNo}
GROUP BY ORD_NO, REF_NO, ENROLL_DATE, CODE_NAME, NON_APV_RSN
</select>
<update id="cnlO" parameterType="hashmap">
	UPDATE ORD SET STAT_CODE = 1, PROCESS_DATE=SYSDATE
	WHERE ORD_NO = #{oNo}
</update>
<update id="cnlRef" parameterType="hashmap">
	UPDATE REF SET STAT_CODE = 6, SEND_DATE=SYSDATE
	WHERE ORD_NO = #{oNo}
</update>
<select id="getRefItem" parameterType="hashmap" resultType="hashmap">
SELECT OI.ITEM_NO, I.ITEM_NAME, CNT, IP.PRICE, TO_CHAR(OI.EXPIRY_DATE, 'YYYY-MM-DD')AS EXPIRY_DATE,
ROW_NUMBER() OVER(ORDER BY OI.ITEM_NO ASC)AS RNUM
FROM ORD O INNER JOIN ORD_ITEM OI
                   ON O.ORD_NO=OI.ORD_NO
           INNER JOIN ITEM I
                   ON OI.ITEM_NO=I.ITEM_NO
           INNER JOIN ITEM_PRICE IP
                   ON OI.ITEM_NO=IP.ITEM_NO
WHERE O.ORD_NO=#{oNo}
ORDER BY OI.ITEM_NO ASC
</select>
</mapper> 
