<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="NY">
	<!-- 공지 카테고리 목록 불러오기 -->
	<select id="getNoticeCate" resultType="hashmap">
	SELECT ROW_NUMBER() OVER(ORDER BY CATE_NO) AS RNUM, CATE_NO, CATE_NAME
	FROM NOTICE_CATE
	WHERE CATE_NO > 0 
	AND DEL_FLAG = 1
	ORDER BY CATE_NO		
	</select>
	
	<!-- 공지 카테고리 등록 -->
	<insert id="addNoticeCate" parameterType="hashmap">
	INSERT INTO NOTICE_CATE(CATE_NO, CATE_NAME, DEL_FLAG)
	VALUES(NOTICE_CATE_SEQ.NEXTVAL,#{inputTxt},1)
	</insert>
	
	<!-- 공지 카테고리 수정 -->
	<update id="updateNoticeCate" parameterType="hashmap">
	UPDATE NOTICE_CATE
	SET
	CATE_NAME = #{cateName}
	WHERE CATE_NO = #{cateNo}
	</update>
	
	<!-- 공지 카테고리 삭제(삭제여부 0으로 수정) -->
	<update id="deleteNoticeCate" parameterType="hashmap">
	UPDATE NOTICE_CATE
	SET
	DEL_FLAG = 0
	WHERE CATE_NO = #{cateNo}
	</update>
	
	<!-- 품목카테고리 불러오기 -->
	<select id="getItemCate"  resultType="hashmap">
	SELECT ROW_NUMBER() OVER(ORDER BY CATE_NO) AS RNUM, CATE_NO, CATE_NAME
	FROM ITEM_CATE
	WHERE DEL_FLAG = 1
	ORDER BY CATE_NO		
	</select>
	
	<!-- 품목 카테고리 등록 -->
	<insert id="addItemCate" parameterType="hashmap">
	INSERT INTO ITEM_CATE(CATE_NO, CATE_NAME, DEL_FLAG)
	VALUES(ITEM_CATE_SEQ.NEXTVAL,#{inputTxt},1)
	</insert>
	
	<update id="updateItemCate" parameterType="hashmap">
	UPDATE ITEM_CATE
	SET
	CATE_NAME = #{cateName}
	WHERE CATE_NO = #{cateNo}
	</update>
	
	<update id="deleteItemCate" parameterType="hashmap">
	UPDATE ITEM_CATE
	SET
	DEL_FLAG = 0
	WHERE CATE_NO = #{cateNo}
	</update>
	
	<select id="getMenuCate" resultType="hashmap">
	SELECT ROW_NUMBER() OVER(ORDER BY CATE_NO) AS RNUM, CATE_NO, CATE_NAME
	FROM POS_CATE
	WHERE DEL_FLAG = 1
	ORDER BY CATE_NO
	</select>
	
	<insert id="addMenuCate" parameterType="hashmap" >
	INSERT INTO POS_CATE(CATE_NO, CATE_NAME, DEL_FLAG)
	VALUES(POS_CATE_SEQ.NEXTVAL,#{inputTxt},1)
	</insert>
	
	<update id="updateMenuCate" parameterType="hashmap">
	UPDATE POS_CATE
	SET
	CATE_NAME = #{cateName}
	WHERE CATE_NO = #{cateNo}
	</update>
	
	<update id="deleteMenuCate" parameterType="hashmap">
	UPDATE POS_CATE
	SET
	DEL_FLAG = 0
	WHERE CATE_NO = #{cateNo}
	</update>
	
	<select id="getSalesList" parameterType="hashmap" resultType="hashmap">
	SELECT RNUM, BRCH_NAME, ENROLL_DATE, SALES_PRICE, ORD_PRICE, NET_PRICE
	FROM (SELECT ROW_NUMBER() OVER(ORDER BY ENROLL_DATE DESC) AS RNUM, 
	           BRCH_NAME, ENROLL_DATE, SALES_PRICE, ORD_PRICE, (SALES_PRICE-ORD_PRICE) AS NET_PRICE
		FROM(SELECT NVL(O.BRCH_NAME,S.BRCH_NAME) AS BRCH_NAME, 
		           NVL(O.ENROLL_DATE,S.ENROLL_DATE)AS ENROLL_DATE,
		           NVL(ORD_PRICE,0) AS ORD_PRICE,
		           NVL(SALES_PRICE,0) AS SALES_PRICE
		    FROM (SELECT B.BRCH_NAME, TO_CHAR(O.ENROLL_DATE,'YYYY-MM-DD')AS ENROLL_DATE, SUM(I.PRICE) AS ORD_PRICE
		            FROM ORD O INNER JOIN ORD_ITEM I
		                         ON O.ORD_NO = I.ORD_NO
		                       INNER JOIN BRCH B
		                         ON O.BRCH_NO = B.BRCH_NO
		             WHERE (O.STAT_CODE = 0 OR O.STAT_CODE = 2 OR O.STAT_CODE = 4
                            OR O.STAT_CODE = 5 OR O.STAT_CODE = 6 OR O.STAT_CODE = 8)
                   <choose>
	                    <when test="brch_choice != null and brch_choice != ''">
			           		<if test="brch_choice != 9999" >
			           		AND O.BRCH_NO = #{brch_choice}
			           		</if>
			           	</when>
		           	  	<when test="brchNo != null and brchNo != ''">
			           	AND O.BRCH_NO = #{brchNo}
		           	  	</when>
                  </choose>
		            GROUP BY B.BRCH_NAME, TO_CHAR(O.ENROLL_DATE,'YYYY-MM-DD'))O
		    FULL OUTER JOIN (SELECT B.BRCH_NAME, TO_CHAR(S.ENROLL_DATE,'YYYY-MM-DD') AS ENROLL_DATE, SUM(M.CNT * P.MENU_PRICE) AS SALES_PRICE
		                    FROM SALES S INNER JOIN SALES_MENU M 
		                                    ON S.SALES_NO = M.SALES_NO
		                                 INNER JOIN POS_MENU P
		                                    ON M.MENU_NO = P.MENU_NO
		                                 INNER JOIN BRCH B
		                                    ON S.BRCH_NO = B.BRCH_NO
		                    WHERE S.CNL_DATE IS NULL
				           <choose>
			                    <when test="brch_choice != null and brch_choice != ''">
					           		<if test="brch_choice != 9999" >
					           		AND S.BRCH_NO = #{brch_choice}
					           		</if>
					           	</when>
				           	  	<when test="brchNo != null and brchNo != ''">
					           	AND S.BRCH_NO = #{brchNo}
				           	  	</when>
		                   </choose>
		                    GROUP BY B.BRCH_NAME, TO_CHAR(S.ENROLL_DATE,'YYYY-MM-DD')) S
		    ON O.BRCH_NAME = S.BRCH_NAME AND O.ENROLL_DATE = S.ENROLL_DATE)
		  <choose>
				<when test="start_date != null and start_date != '' and end_date != null and end_date != ''">
			    WHERE ENROLL_DATE BETWEEN TO_DATE(#{start_date}, 'YY/MM/DD') AND TO_DATE(#{end_date}, 'YY/MM/DD') 
				</when>
				<when test="start_date != null and start_date != '' and (end_date == null or end_date == '')">
				WHERE ENROLL_DATE <![CDATA[ >=]]> TO_DATE(#{start_date}, 'YY/MM/DD')
				</when>
				<when test="end_date != null and end_date != '' and (start_date == null or start_date == '')">
				WHERE ENROLL_DATE <![CDATA[ <=]]> TO_DATE(#{end_date}, 'YY/MM/DD')
				</when>
			</choose>)
	WHERE RNUM BETWEEN #{startCnt} AND #{endCnt}
	</select>
	
	<select id="getSalesCnt" parameterType="hashmap" resultType="Integer">
	SELECT COUNT(*)
	FROM (SELECT ROW_NUMBER() OVER(ORDER BY ENROLL_DATE DESC) AS RNUM, 
	           BRCH_NAME, ENROLL_DATE, SALES_PRICE, ORD_PRICE, (SALES_PRICE-ORD_PRICE) AS NET_PRICE
		FROM(SELECT NVL(O.BRCH_NAME,S.BRCH_NAME) AS BRCH_NAME, 
		           NVL(O.ENROLL_DATE,S.ENROLL_DATE)AS ENROLL_DATE,
		           NVL(ORD_PRICE,0) AS ORD_PRICE,
		           NVL(SALES_PRICE,0) AS SALES_PRICE
		    FROM (SELECT B.BRCH_NAME, TO_CHAR(O.ENROLL_DATE,'YYYY-MM-DD')AS ENROLL_DATE, SUM(I.PRICE) AS ORD_PRICE
		            FROM ORD O INNER JOIN ORD_ITEM I
		                         ON O.ORD_NO = I.ORD_NO
		                       INNER JOIN BRCH B
		                         ON O.BRCH_NO = B.BRCH_NO
		             WHERE (O.STAT_CODE = 0 OR O.STAT_CODE = 2 OR O.STAT_CODE = 4
                            OR O.STAT_CODE = 5 OR O.STAT_CODE = 6 OR O.STAT_CODE = 8)
                   <choose>
	                    <when test="brch_choice != null and brch_choice != ''">
			           		<if test="brch_choice != 9999" >
			           		AND O.BRCH_NO = #{brch_choice}
			           		</if>
			           	</when>
		           	  	<when test="brchNo != null and brchNo != ''">
			           	AND O.BRCH_NO = #{brchNo}
		           	  	</when>
                  </choose>
		            GROUP BY B.BRCH_NAME, TO_CHAR(O.ENROLL_DATE,'YYYY-MM-DD'))O
		    FULL OUTER JOIN (SELECT B.BRCH_NAME, TO_CHAR(S.ENROLL_DATE,'YYYY-MM-DD')AS ENROLL_DATE, SUM(M.CNT * P.MENU_PRICE) AS SALES_PRICE
		                    FROM SALES S INNER JOIN SALES_MENU M 
		                                    ON S.SALES_NO = M.SALES_NO
		                                 INNER JOIN POS_MENU P
		                                    ON M.MENU_NO = P.MENU_NO
		                                 INNER JOIN BRCH B
		                                    ON S.BRCH_NO = B.BRCH_NO
		                    WHERE S.CNL_DATE IS NULL
				           <choose>
			                    <when test="brch_choice != null and brch_choice != ''">
					           		<if test="brch_choice != 9999" >
					           		AND S.BRCH_NO = #{brch_choice}
					           		</if>
					           	</when>
				           	  	<when test="brchNo != null and brchNo != ''">
					           	AND S.BRCH_NO = #{brchNo}
				           	  	</when>
		                  </choose>
		                    GROUP BY B.BRCH_NAME, TO_CHAR(S.ENROLL_DATE,'YYYY-MM-DD')) S
		    ON O.BRCH_NAME = S.BRCH_NAME AND O.ENROLL_DATE = S.ENROLL_DATE)
		  <choose>
				<when test="start_date != null and start_date != '' and end_date != null and end_date != ''">
			    WHERE ENROLL_DATE BETWEEN TO_DATE(#{start_date}, 'YY/MM/DD') AND TO_DATE(#{end_date}, 'YY/MM/DD') 
				</when>
				<when test="start_date != null and start_date != '' and (end_date == null or end_date == '')">
				WHERE ENROLL_DATE <![CDATA[ >=]]> TO_DATE(#{start_date}, 'YY/MM/DD')
				</when>
				<when test="end_date != null and end_date != '' and (start_date == null or start_date == '')">
				WHERE ENROLL_DATE <![CDATA[ <=]]> TO_DATE(#{end_date}, 'YY/MM/DD')
				</when>
			</choose>)
	</select>
	
	<select id="getTotSales" parameterType="hashmap" resultType="hashmap">
	SELECT SUM(SALES_PRICE) AS SALES_PRICE, SUM(ORD_PRICE) AS ORD_PRICE, 
	       (SUM(SALES_PRICE)-SUM(ORD_PRICE)) AS NET_PRICE
	FROM(SELECT NVL(O.BRCH_NAME,S.BRCH_NAME) AS BRCH_NAME, 
	           NVL(O.ENROLL_DATE,S.ENROLL_DATE)AS ENROLL_DATE,
	           NVL(ORD_PRICE,0) AS ORD_PRICE,
	           NVL(SALES_PRICE,0) AS SALES_PRICE
	    FROM (SELECT B.BRCH_NAME, TO_CHAR(O.ENROLL_DATE,'YYYY-MM-DD')AS ENROLL_DATE, SUM(I.PRICE) AS ORD_PRICE
	            FROM ORD O INNER JOIN ORD_ITEM I
	                         ON O.ORD_NO = I.ORD_NO
	                       INNER JOIN BRCH B
	                         ON O.BRCH_NO = B.BRCH_NO
	             WHERE (O.STAT_CODE = 0 OR O.STAT_CODE = 2 OR O.STAT_CODE = 4
	                    OR O.STAT_CODE = 5 OR O.STAT_CODE = 6 OR O.STAT_CODE = 8)
	             <choose>
	                    <when test="brch_choice != null and brch_choice != ''">
			           		<if test="brch_choice != 9999" >
			           		AND O.BRCH_NO = #{brch_choice}
			           		</if>
			           	</when>
		           	  	<when test="brchNo != null and brchNo != ''">
			           	AND O.BRCH_NO = #{brchNo}
		           	  	</when>
                  </choose> 
	            GROUP BY B.BRCH_NAME, TO_CHAR(O.ENROLL_DATE,'YYYY-MM-DD'))O
	    FULL OUTER JOIN (SELECT B.BRCH_NAME, TO_CHAR(S.ENROLL_DATE,'YYYY-MM-DD')AS ENROLL_DATE, SUM(M.CNT * P.MENU_PRICE) AS SALES_PRICE
	                    FROM SALES S INNER JOIN SALES_MENU M 
	                                    ON S.SALES_NO = M.SALES_NO
	                                 INNER JOIN POS_MENU P
	                                    ON M.MENU_NO = P.MENU_NO
	                                 INNER JOIN BRCH B
	                                    ON S.BRCH_NO = B.BRCH_NO
	                    WHERE S.CNL_DATE IS NULL
	                    <choose>
		                    <when test="brch_choice != null and brch_choice != ''">
				           		<if test="brch_choice != 9999" >
				           		AND S.BRCH_NO = #{brch_choice}
				           		</if>
				           	</when>
			           	  	<when test="brchNo != null and brchNo != ''">
				           	AND S.BRCH_NO = #{brchNo}
			           	  	</when>
	                  	</choose> 
	                    GROUP BY B.BRCH_NAME, TO_CHAR(S.ENROLL_DATE,'YYYY-MM-DD')) S
	    ON O.BRCH_NAME = S.BRCH_NAME AND O.ENROLL_DATE = S.ENROLL_DATE)
   <choose>
		<when test="start_date != null and start_date != '' and end_date != null and end_date != ''">
	    WHERE ENROLL_DATE BETWEEN TO_DATE(#{start_date}, 'YY/MM/DD') AND TO_DATE(#{end_date}, 'YY/MM/DD') 
		</when>
		<when test="start_date != null and start_date != '' and (end_date == null or end_date == '')">
		WHERE ENROLL_DATE <![CDATA[ >=]]> TO_DATE(#{start_date}, 'YY/MM/DD')
		</when>
		<when test="end_date != null and end_date != '' and (start_date == null or start_date == '')">
		WHERE ENROLL_DATE <![CDATA[ <=]]> TO_DATE(#{end_date}, 'YY/MM/DD')
		</when>
	</choose>
	</select>
	
	<select id="getSalesDetail" parameterType="hashmap" resultType="hashmap">
	SELECT ROW_NUMBER() OVER (ORDER BY SALES_NO) AS NUM, BRCH_NO, 
	       TO_CHAR(TO_DATE(ENROLL_DATE), 'HH24:MI') AS ENROLL_TIME, SALES_NO, CARD_PAY, CASH_PAY,
	       (CARD_PAY + CASH_PAY) AS TOT_PAY, TO_CHAR(NVL(CNL_DATE, TO_DATE('1111-11-11','YYYY-MM-DD'))) AS CNL_DATE
	FROM (SELECT NVL(B.BRCH_NO, A.BRCH_NO) AS BRCH_NO,
               NVL(B.ENROLL_DATE, A.ENROLL_DATE) AS ENROLL_DATE,
               NVL(A.SALES_NO, B.SALES_NO) AS SALES_NO,
               NVL(A.PRICE, 0) AS CARD_PAY,
               NVL(B.PRICE, 0) AS CASH_PAY,
               NVL(A.CNL_DATE, B.CNL_DATE) AS CNL_DATE
	        FROM (SELECT S.BRCH_NO, TO_CHAR(S.ENROLL_DATE,'YYYY-MM-DD')AS ENROLL_DATE, S.SALES_NO, SUM(SM.CNT * PM.MENU_PRICE) AS PRICE, S.CNL_DATE
                    FROM SALES S INNER JOIN SALES_MENU SM
                                  ON S.SALES_NO = SM.SALES_NO
                                 INNER JOIN POS_MENU PM
                                  ON SM.MENU_NO = PM.MENU_NO
                    WHERE PAY_METHOD = 0
                    <choose>
	                    <when test="brch_choice != null and brch_choice != ''">
			           		<if test="brch_choice != 9999" >
			           		AND S.BRCH_NO = #{brch_choice}
			           		</if>
			           	</when>
		           	  	<when test="brchNo != null and brchNo != ''">
			           	AND S.BRCH_NO = #{brchNo}
		           	  	</when>
                    </choose>
                    AND S.ENROLL_DATE = TO_DATE(#{enroll_date}, 'YY/MM/DD')
                    GROUP BY S.BRCH_NO, TO_CHAR(S.ENROLL_DATE,'YYYY-MM-DD'), S.SALES_NO, S.CNL_DATE
                    ORDER BY S.SALES_NO) A 
	             FULL OUTER JOIN (SELECT S.BRCH_NO, TO_CHAR(S.ENROLL_DATE,'YYYY-MM-DD')AS ENROLL_DATE, S.SALES_NO, SUM(SM.CNT * PM.MENU_PRICE) AS PRICE,
                                         S.CNL_DATE
                                FROM SALES S INNER JOIN SALES_MENU SM
                                              ON S.SALES_NO = SM.SALES_NO
                                             INNER JOIN POS_MENU PM
                                              ON SM.MENU_NO = PM.MENU_NO
                                WHERE PAY_METHOD = 1
                                <choose>
				                    <when test="brch_choice != null and brch_choice != ''">
						           		<if test="brch_choice != 9999" >
						           		AND S.BRCH_NO = #{brch_choice}
						           		</if>
						           	</when>
					           	  	<when test="brchNo != null and brchNo != ''">
						           	AND S.BRCH_NO = #{brchNo}
					           	  	</when>
			                  	</choose>
                                AND S.ENROLL_DATE = TO_DATE(#{enroll_date}, 'YY/MM/DD')
                                GROUP BY S.BRCH_NO, TO_CHAR(S.ENROLL_DATE,'YYYY-MM-DD'), S.SALES_NO, S.CNL_DATE
                                ORDER BY S.SALES_NO) B ON A.SALES_NO = B.SALES_NO 
	                                                   AND A.BRCH_NO = B.BRCH_NO
	                                                   AND A.ENROLL_DATE = B.ENROLL_DATE)
	ORDER BY SALES_NO
	</select>
	
	<select id="getSalesDetailAll" parameterType="hashmap" resultType="hashmap">
	SELECT SUM(CARD_PAY) AS CARD_PAY, SUM(CASH_PAY) AS CASH_PAY, (SUM(CARD_PAY)+SUM(CASH_PAY)) AS TOT_PAY
	FROM (SELECT NVL(B.BRCH_NO, A.BRCH_NO) AS BRCH_NO,
                 NVL(B.ENROLL_DATE, A.ENROLL_DATE) AS ENROLL_DATE,
                 NVL(A.SALES_NO, B.SALES_NO) AS SALES_NO,
                 NVL(A.PRICE,0) AS CARD_PAY,
                 NVL(B.PRICE,0) AS CASH_PAY
	        FROM (SELECT S.BRCH_NO, TO_CHAR(S.ENROLL_DATE,'YYYY-MM-DD') AS ENROLL_DATE, S.SALES_NO, SUM(SM.CNT * PM.MENU_PRICE) AS PRICE
                    FROM SALES S INNER JOIN SALES_MENU SM
                                  ON S.SALES_NO = SM.SALES_NO
                                 INNER JOIN POS_MENU PM
                                  ON SM.MENU_NO = PM.MENU_NO
                    WHERE PAY_METHOD = 0
                    AND S.CNL_DATE IS NULL
                    <choose>
	                    <when test="brch_choice != null and brch_choice != ''">
			           		<if test="brch_choice != 9999" >
			           		AND S.BRCH_NO = #{brch_choice}
			           		</if>
			           	</when>
		           	  	<when test="brchNo != null and brchNo != ''">
			           	AND S.BRCH_NO = #{brchNo}
		           	  	</when>
                    </choose>
                    AND S.ENROLL_DATE = TO_DATE(#{enroll_date}, 'YY/MM/DD')
                    GROUP BY S.BRCH_NO, TO_CHAR(S.ENROLL_DATE,'YYYY-MM-DD'), S.SALES_NO, S.PAY_METHOD
                    ORDER BY S.SALES_NO) A 
	             FULL OUTER JOIN (SELECT S.BRCH_NO, TO_CHAR(S.ENROLL_DATE,'YYYY-MM-DD') AS ENROLL_DATE, S.SALES_NO, SUM(SM.CNT * PM.MENU_PRICE) AS PRICE
                                FROM SALES S INNER JOIN SALES_MENU SM
                                              ON S.SALES_NO = SM.SALES_NO
                                             INNER JOIN POS_MENU PM
                                              ON SM.MENU_NO = PM.MENU_NO
                                WHERE PAY_METHOD = 1
                                AND S.CNL_DATE IS NULL
                                <choose>
				                    <when test="brch_choice != null and brch_choice != ''">
						           		<if test="brch_choice != 9999" >
						           		AND S.BRCH_NO = #{brch_choice}
						           		</if>
						           	</when>
					           	  	<when test="brchNo != null and brchNo != ''">
						           	AND S.BRCH_NO = #{brchNo}
					           	  	</when>
			                   </choose>
                                AND S.ENROLL_DATE = TO_DATE(#{enroll_date}, 'YY/MM/DD')
                                GROUP BY S.BRCH_NO, TO_CHAR(S.ENROLL_DATE,'YYYY-MM-DD'), S.SALES_NO, S.PAY_METHOD
                                ORDER BY S.SALES_NO) B ON A.SALES_NO = B.SALES_NO 
	                                                   AND A.BRCH_NO = B.BRCH_NO
	                                                   AND A.ENROLL_DATE = B.ENROLL_DATE)
	GROUP BY ENROLL_DATE
    ORDER BY ENROLL_DATE
	</select>
	
	<select id="getSalesDetailDetail" parameterType="hashmap" resultType="hashmap">
	SELECT  ROWNUM, P.MENU_NAME, SM.CNT, (SM.CNT * P.MENU_PRICE) AS PRICE, 
			TO_CHAR(NVL(S.CNL_DATE, TO_DATE('1111-11-11','YYYY-MM-DD'))) AS CNL_DATE
	FROM SALES S INNER JOIN SALES_MENU SM
	                ON S.SALES_NO = SM.SALES_NO
	             INNER JOIN POS_MENU P
	                ON SM.MENU_NO = P.MENU_NO
	WHERE S.SALES_NO = #{sales_no}
	</select>
	
	<update id="cnlSales" parameterType="hashmap">
	UPDATE SALES
	SET
	CNL_DATE = SYSDATE
	WHERE SALES_NO = #{sales_no}
	</update>
	
	<select id="getBrchList" resultType="hashmap">
	SELECT BRCH_NO, BRCH_NAME
	FROM BRCH
	WHERE DEL_FLAG = 1
	</select>
	
	<select id="getDailyChartData" parameterType="hashmap" resultType="hashmap">
	SELECT  ENROLL_DATE, SUBSTR(ENROLL_DATE,9,2) AS DAY, SALES_PRICE, ORD_PRICE, (SALES_PRICE-ORD_PRICE) AS NET_PRICE
	FROM(SELECT NVL(O.ENROLL_DATE,S.ENROLL_DATE)AS ENROLL_DATE,
	           NVL(ORD_PRICE,0) AS ORD_PRICE,
	           NVL(SALES_PRICE,0) AS SALES_PRICE
	    FROM (SELECT TO_CHAR(O.ENROLL_DATE,'YYYY-MM-DD') AS ENROLL_DATE, SUM(I.PRICE) AS ORD_PRICE
	            FROM ORD O INNER JOIN ORD_ITEM I
	                         ON O.ORD_NO = I.ORD_NO
	                       INNER JOIN BRCH B
	                         ON O.BRCH_NO = B.BRCH_NO
	             WHERE (O.STAT_CODE = 0 OR O.STAT_CODE = 2 OR O.STAT_CODE = 4
	                    OR O.STAT_CODE = 5 OR O.STAT_CODE = 6 OR O.STAT_CODE = 8)
                  <choose>
	                    <when test="brch_choice != null and brch_choice != ''">
			           		<if test="brch_choice != 9999" >
			           		AND O.BRCH_NO = #{brch_choice}
			           		</if>
			           	</when>
		           	  	<when test="brchNo != null and brchNo != ''">
			           	AND O.BRCH_NO = #{brchNo}
		           	  	</when>
                  </choose>
	            GROUP BY TO_CHAR(O.ENROLL_DATE,'YYYY-MM-DD'))O
	    FULL OUTER JOIN (SELECT TO_CHAR(S.ENROLL_DATE,'YYYY-MM-DD') AS ENROLL_DATE, SUM(M.CNT * P.MENU_PRICE) AS SALES_PRICE
	                    FROM SALES S INNER JOIN SALES_MENU M 
	                                    ON S.SALES_NO = M.SALES_NO
	                                 INNER JOIN POS_MENU P
	                                    ON M.MENU_NO = P.MENU_NO
	                                 INNER JOIN BRCH B
	                                    ON S.BRCH_NO = B.BRCH_NO
	                    WHERE S.CNL_DATE IS NULL
	                    <choose>
		                    <when test="brch_choice != null and brch_choice != ''">
				           		<if test="brch_choice != 9999" >
				           		AND S.BRCH_NO = #{brch_choice}
				           		</if>
				           	</when>
			           	  	<when test="brchNo != null and brchNo != ''">
				           	AND S.BRCH_NO = #{brchNo}
			           	  	</when>
	                  </choose>
	                    GROUP BY TO_CHAR(S.ENROLL_DATE,'YYYY-MM-DD')) S
	    ON  O.ENROLL_DATE = S.ENROLL_DATE)
	WHERE SUBSTR(ENROLL_DATE,1,4) = #{year} AND SUBSTR(ENROLL_DATE,6,2) = #{month}
	ORDER BY ENROLL_DATE
	</select>
	
	<select id="getMonthlyChartData" parameterType="hashmap" resultType="hashmap">
	SELECT  ENROLL_DATE, SUBSTR(ENROLL_DATE,6,2) AS MONTH, SALES_PRICE, ORD_PRICE, (SALES_PRICE-ORD_PRICE) AS NET_PRICE
	FROM(SELECT NVL(O.ENROLL_DATE,S.ENROLL_DATE)AS ENROLL_DATE,
	           NVL(ORD_PRICE,0) AS ORD_PRICE,
	           NVL(SALES_PRICE,0) AS SALES_PRICE
	    FROM (SELECT TO_CHAR(O.ENROLL_DATE,'YYYY-MM') AS ENROLL_DATE, SUM(I.PRICE) AS ORD_PRICE
	            FROM ORD O INNER JOIN ORD_ITEM I
	                         ON O.ORD_NO = I.ORD_NO
	                       INNER JOIN BRCH B
	                         ON O.BRCH_NO = B.BRCH_NO
	             WHERE (O.STAT_CODE = 0 OR O.STAT_CODE = 2 OR O.STAT_CODE = 4
	                    OR O.STAT_CODE = 5 OR O.STAT_CODE = 6 OR O.STAT_CODE = 8)
	             <choose>
	                    <when test="brch_choice != null and brch_choice != ''">
			           		<if test="brch_choice != 9999" >
			           		AND O.BRCH_NO = #{brch_choice}
			           		</if>
			           	</when>
		           	  	<when test="brchNo != null and brchNo != ''">
			           	AND O.BRCH_NO = #{brchNo}
		           	  	</when>
                  </choose>
	            GROUP BY TO_CHAR(O.ENROLL_DATE,'YYYY-MM'))O
	    FULL OUTER JOIN (SELECT TO_CHAR(S.ENROLL_DATE,'YYYY-MM') AS ENROLL_DATE, SUM(M.CNT * P.MENU_PRICE) AS SALES_PRICE
	                    FROM SALES S INNER JOIN SALES_MENU M 
	                                    ON S.SALES_NO = M.SALES_NO
	                                 INNER JOIN POS_MENU P
	                                    ON M.MENU_NO = P.MENU_NO
	                                 INNER JOIN BRCH B
	                                    ON S.BRCH_NO = B.BRCH_NO
	                    WHERE S.CNL_DATE IS NULL
	                    <choose>
		                    <when test="brch_choice != null and brch_choice != ''">
				           		<if test="brch_choice != 9999" >
				           		AND S.BRCH_NO = #{brch_choice}
				           		</if>
				           	</when>
			           	  	<when test="brchNo != null and brchNo != ''">
				           	AND S.BRCH_NO = #{brchNo}
			           	  	</when>
	                  </choose>
	                    GROUP BY TO_CHAR(S.ENROLL_DATE,'YYYY-MM')) S
	    ON  O.ENROLL_DATE = S.ENROLL_DATE)
	WHERE SUBSTR(ENROLL_DATE,1,4) = #{year}
	ORDER BY ENROLL_DATE
	</select>
	
	<select id="getMenuChartData" parameterType="hashmap" resultType="hashmap">
	SELECT TO_CHAR(S.ENROLL_DATE, 'YYYY-MM') AS ENROLL_DATE,  TO_CHAR(S.ENROLL_DATE, 'MM') AS MONTH, PC.CATE_NAME, SUM(CNT) AS CNT
	FROM SALES S INNER JOIN SALES_MENU SM
	              ON S.SALES_NO = SM.SALES_NO
	             INNER JOIN POS_MENU PM
	              ON SM.MENU_NO = PM.MENU_NO
	             INNER JOIN POS_CATE PC
	              ON PM.POS_CATE_NO = PC.CATE_NO
	WHERE PC.DEL_FLAG = 1 
	AND S.CNL_DATE IS NULL
	AND TO_CHAR(S.ENROLL_DATE,'YYYY') = #{year}
	<choose>
        <when test="brch_choice != null and brch_choice != ''">
	 		<if test="brch_choice != 9999" >
	 		AND O.BRCH_NO = #{brch_choice}
	 		</if>
 		</when>
	  	<when test="brchNo != null and brchNo != ''">
 		AND O.BRCH_NO = #{brchNo}
	  	</when>
    </choose>
	GROUP BY TO_CHAR(S.ENROLL_DATE, 'YYYY-MM'),TO_CHAR(S.ENROLL_DATE, 'MM'), PC.CATE_NAME
	ORDER BY TO_CHAR(S.ENROLL_DATE, 'YYYY-MM')
	</select>
	
	<select id="getMenuChartDataDetail" parameterType="hashmap" resultType="hashmap">
	SELECT *
	FROM (SELECT TO_CHAR(S.ENROLL_DATE,'YYYY-MM') AS ENROLL_DATE, PC.CATE_NAME, PM.MENU_NAME, SUM(SM.CNT) AS CNT
	    FROM SALES S INNER JOIN SALES_MENU SM
	                    ON S.SALES_NO = SM.SALES_NO
	                 INNER JOIN POS_MENU PM
	                    ON SM.MENU_NO = PM.MENU_NO
	                 INNER JOIN POS_CATE PC
	                    ON PM.POS_CATE_NO = PC.CATE_NO
	    WHERE S.CNL_DATE IS NULL
	    AND PC.DEL_FLAG = 1
	    AND TO_CHAR(S.ENROLL_DATE,'YYYY') = #{year}
	    AND TO_CHAR(S.ENROLL_DATE,'MM') = #{month}
	   <choose>
            <when test="brch_choice != null and brch_choice != ''">
	     		<if test="brch_choice != 9999" >
	     		AND O.BRCH_NO = #{brch_choice}
	     		</if>
     		</when>
	   	  	<when test="brchNo != null and brchNo != ''">
	    	AND O.BRCH_NO = #{brchNo}
	   	  	</when>
        </choose>
	    <if test="menuCate != null and menuCate != ''">
			<if test="menuCate != 9999" >
			AND PC.CATE_NO = #{menuCate}
			</if>
    	</if>
	    GROUP BY TO_CHAR(S.ENROLL_DATE,'YYYY-MM'), PC.CATE_NAME, PM.MENU_NAME)
	ORDER BY CNT DESC
	</select> 
	
	<select id="getHeadMonthlyChartData" parameterType="hashmap" resultType="hashmap">
	SELECT BRCH_NAME, SUBSTR(ENROLL_DATE,6,2) AS MONTH, SUM((SALES_PRICE-ORD_PRICE)) AS TOT_NET
	FROM(SELECT NVL(O.BRCH_NAME,S.BRCH_NAME) AS BRCH_NAME, 
	            NVL(O.ENROLL_DATE,S.ENROLL_DATE)AS ENROLL_DATE,
	            NVL(ORD_PRICE,0) AS ORD_PRICE,
	            NVL(SALES_PRICE,0) AS SALES_PRICE
	    FROM (SELECT B.BRCH_NAME, TO_CHAR(O.ENROLL_DATE,'YYYY-MM-DD') AS ENROLL_DATE, SUM(I.PRICE) AS ORD_PRICE
	            FROM ORD O INNER JOIN ORD_ITEM I
	                         ON O.ORD_NO = I.ORD_NO
	                       INNER JOIN BRCH B
	                         ON O.BRCH_NO = B.BRCH_NO
	             WHERE (O.STAT_CODE = 0 OR O.STAT_CODE = 2 OR O.STAT_CODE = 4
	                    OR O.STAT_CODE = 5 OR O.STAT_CODE = 6 OR O.STAT_CODE = 8)
	            GROUP BY B.BRCH_NAME, TO_CHAR(O.ENROLL_DATE,'YYYY-MM-DD')) O
	    FULL OUTER JOIN (SELECT B.BRCH_NAME, TO_CHAR(S.ENROLL_DATE,'YYYY-MM-DD')AS ENROLL_DATE, SUM(M.CNT * P.MENU_PRICE) AS SALES_PRICE
	                    FROM SALES S INNER JOIN SALES_MENU M 
	                                    ON S.SALES_NO = M.SALES_NO
	                                 INNER JOIN POS_MENU P
	                                    ON M.MENU_NO = P.MENU_NO
	                                 INNER JOIN BRCH B
	                                    ON S.BRCH_NO = B.BRCH_NO
	                    WHERE S.CNL_DATE IS NULL
	                    GROUP BY B.BRCH_NAME, TO_CHAR(S.ENROLL_DATE,'YYYY-MM-DD')) S
	     ON O.BRCH_NAME = S.BRCH_NAME AND O.ENROLL_DATE = S.ENROLL_DATE)
	WHERE SUBSTR(ENROLL_DATE,1,4) = #{year}
	AND SUBSTR(ENROLL_DATE,6,2) = #{month}
	GROUP BY BRCH_NAME, SUBSTR(ENROLL_DATE,6,2)
	ORDER BY SUBSTR(ENROLL_DATE,6,2)
	</select>
</mapper> 
